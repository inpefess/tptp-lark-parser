tptp_file            : tptp_input*
tptp_input           : annotated_formula | include
annotated_formula    : fof_annotated | cnf_annotated
fof_annotated        : "fof" "(" NAME "," FORMULA_ROLE "," fof_formula annotations ")"  "." 
cnf_annotated        : "cnf" "(" NAME "," FORMULA_ROLE "," cnf_formula annotations ")"  "." 
annotations          :  "," source optional_info | null
FORMULA_ROLE         : LOWER_WORD | "axiom" | "hypothesis" | "definition" | "assumption" | "lemma" | "theorem" | "corollary" | "conjecture" | "negated_conjecture" | "plain" | "type" | "fi_domain" | "fi_functors" | "fi_predicates" | "unknown"
logic_defn_rule      : logic_defn_lhs ASSIGNMENT logic_defn_rhs
logic_defn_lhs       : logic_defn_value  | NAME | "$constants" | "$quantification" | "$consequence" | "$modalities"
logic_defn_rhs       : logic_defn_value
logic_defn_value     : DEFINED_CONSTANT | "$rigid" | "$flexible" | "$constant" | "$varying" | "$cumulative" | "$decreasing" | "$local" | "$global" | "$modal_system_K" | "$modal_system_T" | "$modal_system_D" | "$modal_system_S4" | "$modal_system_S5" | "$modal_axiom_K" | "$modal_axiom_T" | "$modal_axiom_B" | "$modal_axiom_D" | "$modal_axiom_4" | "$modal_axiom_5"
fof_formula          : fof_logic_formula | fof_sequent
fof_logic_formula    : fof_binary_formula | fof_unary_formula | fof_unitary_formula
fof_binary_formula   : fof_binary_nonassoc | fof_binary_assoc
fof_binary_nonassoc  : fof_unit_formula NONASSOC_CONNECTIVE fof_unit_formula
fof_binary_assoc     : fof_or_formula | fof_and_formula
fof_or_formula       : fof_unit_formula VLINE fof_unit_formula | fof_or_formula VLINE fof_unit_formula
fof_and_formula      : fof_unit_formula "&" fof_unit_formula | fof_and_formula "&" fof_unit_formula
fof_unary_formula    : UNARY_CONNECTIVE fof_unit_formula | fof_infix_unary
fof_infix_unary      : fof_term INFIX_INEQUALITY fof_term
fof_unit_formula     : fof_unitary_formula | fof_unary_formula
fof_unitary_formula  : fof_quantified_formula | fof_atomic_formula | "(" fof_logic_formula ")" 
fof_quantified_formula : FOF_QUANTIFIER "[" fof_variable_list "]" ":" fof_unit_formula
fof_variable_list    : variable | variable "," fof_variable_list
fof_atomic_formula   : fof_plain_atomic_formula | fof_defined_atomic_formula | fof_system_atomic_formula
fof_plain_atomic_formula : fof_plain_term
fof_defined_atomic_formula : fof_defined_plain_formula | fof_defined_infix_formula
fof_defined_plain_formula : fof_defined_plain_term | defined_predicate | defined_predicate "(" fof_arguments ")" 
fof_defined_infix_formula : fof_term defined_infix_pred fof_term
fof_system_atomic_formula : fof_system_term
fof_plain_term       : constant | FUNCTOR "(" fof_arguments ")" 
fof_defined_term     : DEFINED_TERM | fof_defined_atomic_term
fof_defined_atomic_term  : fof_defined_plain_term
fof_defined_plain_term   : DEFINED_CONSTANT | DEFINED_FUNCTOR "(" fof_arguments ")" 
fof_system_term      : SYSTEM_CONSTANT | SYSTEM_FUNCTOR "(" fof_arguments ")" 
fof_arguments        : fof_term | fof_term "," fof_arguments
fof_term             : fof_function_term | variable
fof_function_term    : fof_plain_term | fof_defined_term | fof_system_term
fof_sequent          : fof_formula_tuple GENTZEN_ARROW fof_formula_tuple |  "(" fof_sequent ")" 
fof_formula_tuple    : "{" "}" | "{" fof_formula_tuple_list "}"
fof_formula_tuple_list : fof_logic_formula | fof_logic_formula "," fof_formula_tuple_list
cnf_formula          : disjunction |  "(" disjunction ")" 
disjunction          : literal | disjunction VLINE literal
literal              : fof_atomic_formula | UNARY_CONNECTIVE fof_atomic_formula | fof_infix_unary
SUBTYPE_SIGN         : "<<"
FOF_QUANTIFIER       : "!" | "?"
NONASSOC_CONNECTIVE  : "<=>" | "=>" | "<=" | "<~>" | "~" VLINE | "~&"
ASSOC_CONNECTIVE     : VLINE | "&"
UNARY_CONNECTIVE     : "~"
GENTZEN_ARROW        : "-->"
ASSIGNMENT           : ":="
type_constant        : type_functor
type_functor         : ATOMIC_WORD
defined_type         : ATOMIC_DEFINED_WORD | "$oType" | "$o" | "$iType" | "$i" | "$tType" | "$real" | "$rat" | "$int"
system_type          : ATOMIC_SYSTEM_WORD
atom                 : untyped_atom | DEFINED_CONSTANT
untyped_atom         : constant | SYSTEM_CONSTANT
proposition          : predicate
predicate            : ATOMIC_WORD
defined_predicate    : ATOMIC_DEFINED_WORD
defined_infix_pred   : INFIX_EQUALITY
system_proposition   : system_predicate
system_predicate     : ATOMIC_SYSTEM_WORD
INFIX_EQUALITY       : "="
INFIX_INEQUALITY     : "!="
constant             : FUNCTOR
FUNCTOR              : ATOMIC_WORD
SYSTEM_CONSTANT      : SYSTEM_FUNCTOR
SYSTEM_FUNCTOR       : ATOMIC_SYSTEM_WORD
DEFINED_CONSTANT     : DEFINED_FUNCTOR
DEFINED_FUNCTOR      : ATOMIC_DEFINED_WORD | "$uminus" | "$sum" | "$difference" | "$product" | "$quotient" | "$quotient_e" | "$quotient_t" | "$quotient_f" | "$remainder_e" | "$remainder_t" | "$remainder_f" | "$floor" | "$ceiling" | "$truncate" | "$round" | "$to_int" | "$to_rat" | "$to_real"
TH1_DEFINED_TERM     : "!!" | "??" | "@@+" | "@@-" | "@="
DEFINED_TERM         : NUMBER | DISTINCT_OBJECT
variable             : UPPER_WORD
source               : dag_source | internal_source | external_source | "unknown" | "[" sources "]"
sources              : source | source "," sources
dag_source           : NAME | inference_record
inference_record     : "inference" "(" inference_rule "," general_list "," inference_parents ")" 
inference_rule       : ATOMIC_WORD
inference_parents    : "[" "]" | "[" parent_list "]"
parent_list          : parent_info | parent_info "," parent_list
parent_info          : source parent_details
parent_details       : ":" general_list | null
internal_source      : "introduced" "(" intro_type optional_info ")" 
intro_type           : "definition" | "axiom_of_choice" | "tautology" | "assumption"
external_source      : file_source | theory | creator_source
file_source          : "file" "(" FILE_NAME file_info ")" 
file_info            :  "," NAME | null
theory               : "theory" "(" THEORY_NAME optional_info ")" 
THEORY_NAME          : "equality" | "ac"
creator_source       : "creator" "(" CREATOR_NAME optional_info ")" 
CREATOR_NAME         : ATOMIC_WORD
optional_info        :  "," general_list | null
info_items           : info_item | info_item "," info_items
info_item            : FORMULA_ITEM | inference_item | general_function
FORMULA_ITEM         : DESCRIPTION_ITEM | IQUOTE_ITEM
DESCRIPTION_ITEM     : "description" "(" ATOMIC_WORD ")" 
IQUOTE_ITEM          : "iquote" "(" ATOMIC_WORD ")" 
inference_item       : inference_status | assumptions_record | new_symbol_record | refutation
inference_status     : "status" "(" STATUS_VALUE ")"  | inference_info
STATUS_VALUE         : "suc" | "unp" | "sap" | "esa" | "sat" | "fsa" | "thm" | "eqv" | "tac" | "wec" | "eth" | "tau" | "wtc" | "wth" | "cax" | "sca" | "tca" | "wca" | "cup" | "csp" | "ecs" | "csa" | "cth" | "ceq" | "unc" | "wcc" | "ect" | "fun" | "uns" | "wuc" | "wct" | "scc" | "uca" | "noc"
inference_info       : inference_rule "(" ATOMIC_WORD "," general_list ")" 
assumptions_record   : "assumptions" "(" "[" name_list "]" ")" 
refutation           : "refutation" "(" file_source ")" 
new_symbol_record    : "new_symbols" "(" ATOMIC_WORD "," [new_symbol_list] ")" 
new_symbol_list      : principal_symbol | principal_symbol "," new_symbol_list
principal_symbol     : FUNCTOR | variable
include              : "include" "(" FILE_NAME formula_selection ")"  "." 
formula_selection    :  "," "[" name_list "]" | null
name_list            : NAME | NAME "," name_list
general_term         : general_data | general_data ":" general_term | general_list
general_data         : ATOMIC_WORD | general_function | variable | NUMBER | DISTINCT_OBJECT | formula_data | "bind" "(" variable "," formula_data ")"
general_function     : ATOMIC_WORD "(" general_terms ")"
formula_data         : "$fof" "(" fof_formula ")"  | "$cnf" "(" cnf_formula ")"  | "$fot" "(" fof_term ")" 
general_list         : "[" "]" | "[" general_terms "]"
general_terms        : general_term | general_term "," general_terms
NAME                 : ATOMIC_WORD | INTEGER
ATOMIC_WORD          : LOWER_WORD | SINGLE_QUOTED
ATOMIC_DEFINED_WORD  : DOLLAR_WORD
ATOMIC_SYSTEM_WORD   : DOLLAR_DOLLAR_WORD
NUMBER               : REAL | INTEGER | RATIONAL
FILE_NAME            : SINGLE_QUOTED
null                 :
COMMENT              : COMMENT_LINE | COMMENT_BLOCK
COMMENT_LINE         : "%" (PRINTABLE_CHAR)*
COMMENT_BLOCK        : "/*" NOT_STAR_SLASH "*" "*"* "/"
NOT_STAR_SLASH       : /([^\*]*[\*][\*]*[^\/*])*[^\*]*/
SINGLE_QUOTED        : SINGLE_QUOTE SQ_CHAR SQ_CHAR* SINGLE_QUOTE
SQ_CHAR              : /([\40-\46\50-\133\135-\176]|[\\]['\\])/
DO_CHAR              : /([\40-\41\43-\133\135-\176]|[\\]["\\])/
DISTINCT_OBJECT      : DOUBLE_QUOTE DO_CHAR* DOUBLE_QUOTE
DOLLAR_WORD          : DOLLAR LOWER_WORD
DOLLAR_DOLLAR_WORD   : DOLLAR DOLLAR LOWER_WORD
UPPER_WORD           : UPPER_ALPHA ALPHA_NUMERIC*
LOWER_WORD           : LOWER_ALPHA ALPHA_NUMERIC*
VLINE                : "|"
STAR                 : "*"
PLUS                 : "+"
ARROW                : ">"
LESS_SIGN            : "<"
REAL                 : (SIGNED_REAL | UNSIGNED_REAL)
SIGNED_REAL          : SIGN UNSIGNED_REAL
UNSIGNED_REAL        : (DECIMAL_FRACTION | DECIMAL_EXPONENT)
RATIONAL             : (SIGNED_RATIONAL | UNSIGNED_RATIONAL)
SIGNED_RATIONAL      : SIGN UNSIGNED_RATIONAL
UNSIGNED_RATIONAL    : DECIMAL SLASH POSITIVE_DECIMAL
INTEGER              : (SIGNED_INTEGER | UNSIGNED_INTEGER)
SIGNED_INTEGER       : SIGN UNSIGNED_INTEGER
UNSIGNED_INTEGER     : DECIMAL
DECIMAL              : (ZERO_NUMERIC | POSITIVE_DECIMAL) 
POSITIVE_DECIMAL     : NON_ZERO_NUMERIC NUMERIC*
DECIMAL_EXPONENT     : (DECIMAL | DECIMAL_FRACTION) EXPONENT EXP_INTEGER
DECIMAL_FRACTION     : DECIMAL DOT_DECIMAL
DOT_DECIMAL          : DOT NUMERIC NUMERIC*
EXP_INTEGER          : (SIGNED_EXP_INTEGER | UNSIGNED_EXP_INTEGER)
SIGNED_EXP_INTEGER   : SIGN UNSIGNED_EXP_INTEGER
UNSIGNED_EXP_INTEGER : NUMERIC NUMERIC*
PERCENTAGE_SIGN      : "%"
DOUBLE_QUOTE         : /"/
SINGLE_QUOTE         : "'"
SIGN                 : /[+-]/
DOT                  : "."
EXPONENT             : /[Ee]/
SLASH                : "/"
ZERO_NUMERIC         : "0"
NON_ZERO_NUMERIC     : "1".."9"
NUMERIC              : "0".."9"
LOWER_ALPHA          : "a".."z"
UPPER_ALPHA          : "A".."Z"
ALPHA_NUMERIC        : (LOWER_ALPHA | UPPER_ALPHA | NUMERIC | "_") 
DOLLAR               : "$"
PRINTABLE_CHAR       : /./ 
VIEWABLE_CHAR        : /[.\n]/
%ignore COMMENT
%import common.WS
%ignore WS