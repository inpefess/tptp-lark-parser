[tool.poetry]
name = "tptp-lark-parser"
version = "0.0.4"
description = "A TPTP parser using Lark"
authors = ["Boris Shminke <boris@shminke.ml>"]
license = "Apache-2.0"
repository = "https://github.com/inpefess/tptp-lark-parser"
readme = "README.rst"
classifiers=[
	"Programming Language :: Python :: 3.7",
	"Programming Language :: Python :: 3.8",
	"Programming Language :: Python :: 3.9",
	"Programming Language :: Python :: 3.10",
	"License :: OSI Approved :: Apache Software License",
	"Operating System :: OS Independent",
	"Intended Audience :: Science/Research",
        "Topic :: Scientific/Engineering :: Mathematics",
	"Development Status :: 1 - Planning",
	"Environment :: Console",
	"Natural Language :: English",
	"Typing :: Typed"
]
include = ["tptp_lark_parser/py.typed"]

[tool.poetry.dependencies]
python = ">= 3.7.1, < 3.11"
lark-parser = "*"
importlib_resources = {version = "*", markers = "python_version < \"3.9\""}

[tool.poetry.dev-dependencies]
black = "*"
jupyterlab = "*"
mypy = "*"
pylint = "*"
pytest-coverage = "*"
pre-commit = "*"
types-dataclasses = "*"
sphinx-rtd-theme = "*"
sphinx-autodoc-typehints = "*"
flake8 = "*"

[tool.black]
line-length=79

[tool.isort]
profile = "black"
src_paths = ["tptp_lark_parser"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--doctest-modules --cov tptp_lark_parser --cov-report term-missing --cov-report xml --cov-fail-under=100 --junit-xml test-results/tptp-lark-parser.xml"
testpaths = ["tptp_lark_parser"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "from importlib.resources import files"
]

[tool.pylint.master]
disable = "bad-continuation"

[tool.pylint.format]
ignore-long-lines = "(::=|:==|this_is_a_test_case|:math:|.. math::|https://)"
max-line-length = 79

[tool.pylint.design]
max-statements = 10

[tool.pylint.typecheck]
generated-members = ["orjson"]

[tool.mypy]
show_error_codes = true
incremental = false
disable_error_code = "no-redef"

[[tool.mypy.overrides]]
module = ["importlib_resources"]
ignore_missing_imports = true
